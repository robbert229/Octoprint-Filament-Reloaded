// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PinState int32

const (
	PinState_INVALID PinState = 0
	PinState_LOW     PinState = 1
	PinState_HIGH    PinState = 2
)

var PinState_name = map[int32]string{
	0: "INVALID",
	1: "LOW",
	2: "HIGH",
}
var PinState_value = map[string]int32{
	"INVALID": 0,
	"LOW":     1,
	"HIGH":    2,
}

func (x PinState) String() string {
	return proto.EnumName(PinState_name, int32(x))
}
func (PinState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_server_0fe6dd2993e4225b, []int{0}
}

type ListenRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenRequest) Reset()         { *m = ListenRequest{} }
func (m *ListenRequest) String() string { return proto.CompactTextString(m) }
func (*ListenRequest) ProtoMessage()    {}
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_0fe6dd2993e4225b, []int{0}
}
func (m *ListenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest.Unmarshal(m, b)
}
func (m *ListenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest.Marshal(b, m, deterministic)
}
func (dst *ListenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest.Merge(dst, src)
}
func (m *ListenRequest) XXX_Size() int {
	return xxx_messageInfo_ListenRequest.Size(m)
}
func (m *ListenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest proto.InternalMessageInfo

type ListenResponse struct {
	Pin                  int32    `protobuf:"varint,1,opt,name=pin" json:"pin,omitempty"`
	State                PinState `protobuf:"varint,2,opt,name=state,enum=api.PinState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenResponse) Reset()         { *m = ListenResponse{} }
func (m *ListenResponse) String() string { return proto.CompactTextString(m) }
func (*ListenResponse) ProtoMessage()    {}
func (*ListenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_0fe6dd2993e4225b, []int{1}
}
func (m *ListenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenResponse.Unmarshal(m, b)
}
func (m *ListenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenResponse.Marshal(b, m, deterministic)
}
func (dst *ListenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenResponse.Merge(dst, src)
}
func (m *ListenResponse) XXX_Size() int {
	return xxx_messageInfo_ListenResponse.Size(m)
}
func (m *ListenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListenResponse proto.InternalMessageInfo

func (m *ListenResponse) GetPin() int32 {
	if m != nil {
		return m.Pin
	}
	return 0
}

func (m *ListenResponse) GetState() PinState {
	if m != nil {
		return m.State
	}
	return PinState_INVALID
}

type CheckRequest struct {
	Pin                  int32    `protobuf:"varint,1,opt,name=pin" json:"pin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRequest) Reset()         { *m = CheckRequest{} }
func (m *CheckRequest) String() string { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()    {}
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_0fe6dd2993e4225b, []int{2}
}
func (m *CheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckRequest.Unmarshal(m, b)
}
func (m *CheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckRequest.Marshal(b, m, deterministic)
}
func (dst *CheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRequest.Merge(dst, src)
}
func (m *CheckRequest) XXX_Size() int {
	return xxx_messageInfo_CheckRequest.Size(m)
}
func (m *CheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRequest proto.InternalMessageInfo

func (m *CheckRequest) GetPin() int32 {
	if m != nil {
		return m.Pin
	}
	return 0
}

type CheckResponse struct {
	State                PinState `protobuf:"varint,1,opt,name=state,enum=api.PinState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckResponse) Reset()         { *m = CheckResponse{} }
func (m *CheckResponse) String() string { return proto.CompactTextString(m) }
func (*CheckResponse) ProtoMessage()    {}
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_0fe6dd2993e4225b, []int{3}
}
func (m *CheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResponse.Unmarshal(m, b)
}
func (m *CheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResponse.Marshal(b, m, deterministic)
}
func (dst *CheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResponse.Merge(dst, src)
}
func (m *CheckResponse) XXX_Size() int {
	return xxx_messageInfo_CheckResponse.Size(m)
}
func (m *CheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResponse proto.InternalMessageInfo

func (m *CheckResponse) GetState() PinState {
	if m != nil {
		return m.State
	}
	return PinState_INVALID
}

func init() {
	proto.RegisterType((*ListenRequest)(nil), "api.ListenRequest")
	proto.RegisterType((*ListenResponse)(nil), "api.ListenResponse")
	proto.RegisterType((*CheckRequest)(nil), "api.CheckRequest")
	proto.RegisterType((*CheckResponse)(nil), "api.CheckResponse")
	proto.RegisterEnum("api.PinState", PinState_name, PinState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Listen service

type ListenClient interface {
	Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (Listen_ListenClient, error)
	Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error)
}

type listenClient struct {
	cc *grpc.ClientConn
}

func NewListenClient(cc *grpc.ClientConn) ListenClient {
	return &listenClient{cc}
}

func (c *listenClient) Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (Listen_ListenClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Listen_serviceDesc.Streams[0], c.cc, "/api.Listen/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &listenListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Listen_ListenClient interface {
	Recv() (*ListenResponse, error)
	grpc.ClientStream
}

type listenListenClient struct {
	grpc.ClientStream
}

func (x *listenListenClient) Recv() (*ListenResponse, error) {
	m := new(ListenResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *listenClient) Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error) {
	out := new(CheckResponse)
	err := grpc.Invoke(ctx, "/api.Listen/Check", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Listen service

type ListenServer interface {
	Listen(*ListenRequest, Listen_ListenServer) error
	Check(context.Context, *CheckRequest) (*CheckResponse, error)
}

func RegisterListenServer(s *grpc.Server, srv ListenServer) {
	s.RegisterService(&_Listen_serviceDesc, srv)
}

func _Listen_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ListenServer).Listen(m, &listenListenServer{stream})
}

type Listen_ListenServer interface {
	Send(*ListenResponse) error
	grpc.ServerStream
}

type listenListenServer struct {
	grpc.ServerStream
}

func (x *listenListenServer) Send(m *ListenResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Listen_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListenServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Listen/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListenServer).Check(ctx, req.(*CheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Listen_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Listen",
	HandlerType: (*ListenServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _Listen_Check_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _Listen_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "server.proto",
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_server_0fe6dd2993e4225b) }

var fileDescriptor_server_0fe6dd2993e4225b = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x94, 0x92, 0x49,
	0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49,
	0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x28, 0x51, 0xe2, 0xe7, 0xe2, 0xf5, 0xc9, 0x2c, 0x2e, 0x49,
	0xcd, 0x0b, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x72, 0xe7, 0xe2, 0x83, 0x09, 0x14, 0x17,
	0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x09, 0x70, 0x31, 0x17, 0x64, 0xe6, 0x49, 0x30, 0x2a, 0x30, 0x6a,
	0xb0, 0x06, 0x81, 0x98, 0x42, 0xca, 0x5c, 0xac, 0xc5, 0x25, 0x89, 0x25, 0xa9, 0x12, 0x4c, 0x0a,
	0x8c, 0x1a, 0x7c, 0x46, 0xbc, 0x7a, 0x89, 0x05, 0x99, 0x7a, 0x01, 0x99, 0x79, 0xc1, 0x20, 0xc1,
	0x20, 0x88, 0x9c, 0x92, 0x02, 0x17, 0x8f, 0x73, 0x46, 0x6a, 0x72, 0x36, 0xd4, 0x60, 0x4c, 0x63,
	0x94, 0x4c, 0xb8, 0x78, 0xa1, 0x2a, 0xa0, 0x36, 0xc1, 0xcd, 0x65, 0xc4, 0x6d, 0xae, 0x96, 0x16,
	0x17, 0x07, 0x4c, 0x48, 0x88, 0x9b, 0x8b, 0xdd, 0xd3, 0x2f, 0xcc, 0xd1, 0xc7, 0xd3, 0x45, 0x80,
	0x41, 0x88, 0x9d, 0x8b, 0xd9, 0xc7, 0x3f, 0x5c, 0x80, 0x51, 0x88, 0x83, 0x8b, 0xc5, 0xc3, 0xd3,
	0xdd, 0x43, 0x80, 0xc9, 0xa8, 0x93, 0x91, 0x8b, 0x0d, 0xe2, 0x1b, 0x21, 0x53, 0x38, 0x4b, 0x08,
	0x6c, 0x2c, 0x8a, 0xaf, 0xa5, 0x84, 0x51, 0xc4, 0x20, 0xce, 0x51, 0x62, 0x30, 0x60, 0x14, 0xf2,
	0xe0, 0x62, 0x05, 0xbb, 0x51, 0x48, 0x10, 0xac, 0x02, 0xd9, 0x47, 0x52, 0x42, 0xc8, 0x42, 0x50,
	0x3d, 0x12, 0x4d, 0x97, 0x9f, 0x4c, 0x66, 0x12, 0x12, 0x12, 0x00, 0x87, 0x77, 0x32, 0x48, 0x4e,
	0xbf, 0xba, 0x20, 0x33, 0xaf, 0xd6, 0x89, 0x25, 0x8a, 0xa9, 0x20, 0x29, 0x89, 0x0d, 0x1c, 0xec,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x73, 0xb8, 0x49, 0xdd, 0xa9, 0x01, 0x00, 0x00,
}
